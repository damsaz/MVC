// <auto-generated />
using MVC1.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MVC1.Migrations
{
    [DbContext(typeof(MVC1Context))]
    partial class MVC1ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("LanguagePerson", b =>
                {
                    b.Property<int>("LanguagesIdLanguage")
                        .HasColumnType("int");

                    b.Property<int>("peopleId")
                        .HasColumnType("int");

                    b.HasKey("LanguagesIdLanguage", "peopleId");

                    b.HasIndex("peopleId");

                    b.ToTable("LanguagePerson");

                    b.HasData(
                        new
                        {
                            LanguagesIdLanguage = 1,
                            peopleId = 1
                        },
                        new
                        {
                            LanguagesIdLanguage = 2,
                            peopleId = 1
                        },
                        new
                        {
                            LanguagesIdLanguage = 2,
                            peopleId = 2
                        },
                        new
                        {
                            LanguagesIdLanguage = 1,
                            peopleId = 3
                        },
                        new
                        {
                            LanguagesIdLanguage = 2,
                            peopleId = 4
                        },
                        new
                        {
                            LanguagesIdLanguage = 2,
                            peopleId = 5
                        },
                        new
                        {
                            LanguagesIdLanguage = 1,
                            peopleId = 6
                        },
                        new
                        {
                            LanguagesIdLanguage = 2,
                            peopleId = 7
                        },
                        new
                        {
                            LanguagesIdLanguage = 2,
                            peopleId = 8
                        },
                        new
                        {
                            LanguagesIdLanguage = 1,
                            peopleId = 9
                        },
                        new
                        {
                            LanguagesIdLanguage = 2,
                            peopleId = 10
                        },
                        new
                        {
                            LanguagesIdLanguage = 2,
                            peopleId = 11
                        },
                        new
                        {
                            LanguagesIdLanguage = 1,
                            peopleId = 12
                        },
                        new
                        {
                            LanguagesIdLanguage = 1,
                            peopleId = 13
                        },
                        new
                        {
                            LanguagesIdLanguage = 1,
                            peopleId = 14
                        },
                        new
                        {
                            LanguagesIdLanguage = 2,
                            peopleId = 15
                        },
                        new
                        {
                            LanguagesIdLanguage = 2,
                            peopleId = 12
                        },
                        new
                        {
                            LanguagesIdLanguage = 3,
                            peopleId = 13
                        },
                        new
                        {
                            LanguagesIdLanguage = 4,
                            peopleId = 14
                        },
                        new
                        {
                            LanguagesIdLanguage = 3,
                            peopleId = 15
                        },
                        new
                        {
                            LanguagesIdLanguage = 3,
                            peopleId = 16
                        },
                        new
                        {
                            LanguagesIdLanguage = 4,
                            peopleId = 17
                        },
                        new
                        {
                            LanguagesIdLanguage = 4,
                            peopleId = 12
                        },
                        new
                        {
                            LanguagesIdLanguage = 4,
                            peopleId = 13
                        },
                        new
                        {
                            LanguagesIdLanguage = 2,
                            peopleId = 14
                        },
                        new
                        {
                            LanguagesIdLanguage = 1,
                            peopleId = 15
                        },
                        new
                        {
                            LanguagesIdLanguage = 1,
                            peopleId = 18
                        },
                        new
                        {
                            LanguagesIdLanguage = 1,
                            peopleId = 19
                        },
                        new
                        {
                            LanguagesIdLanguage = 1,
                            peopleId = 20
                        });
                });

            modelBuilder.Entity("MVC1.Models.Language", b =>
                {
                    b.Property<int>("IdLanguage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLanguage"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdLanguage");

                    b.ToTable("Language");

                    b.HasData(
                        new
                        {
                            IdLanguage = 1,
                            Name = "En"
                        },
                        new
                        {
                            IdLanguage = 2,
                            Name = "Sv"
                        },
                        new
                        {
                            IdLanguage = 3,
                            Name = "Fr"
                        },
                        new
                        {
                            IdLanguage = 4,
                            Name = "Fa"
                        },
                        new
                        {
                            IdLanguage = 5,
                            Name = "Ar"
                        });
                });

            modelBuilder.Entity("MVC1.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("First_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Last_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Person");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Jakarta",
                            First_name = "Gary",
                            Last_name = "Ortiz",
                            Tel = "07395539"
                        },
                        new
                        {
                            Id = 2,
                            City = "Matheu",
                            First_name = "Albert",
                            Last_name = "Williamson",
                            Tel = "0739439"
                        },
                        new
                        {
                            Id = 3,
                            City = "Beacon",
                            First_name = "Mildred",
                            Last_name = "Fuller",
                            Tel = "07378539"
                        },
                        new
                        {
                            Id = 4,
                            City = "Calen",
                            First_name = "Russell",
                            Last_name = "Robinson",
                            Tel = "07323539"
                        },
                        new
                        {
                            Id = 5,
                            City = "Tehran",
                            First_name = "Laura",
                            Last_name = "Harper",
                            Tel = "07395659"
                        },
                        new
                        {
                            Id = 6,
                            City = "Mantorp",
                            First_name = "Larry",
                            Last_name = "Sanders",
                            Tel = "07395539"
                        },
                        new
                        {
                            Id = 7,
                            City = "Saint-Maximin",
                            First_name = "Michael",
                            Last_name = "Rice",
                            Tel = "073955546"
                        },
                        new
                        {
                            Id = 8,
                            City = "Nickerson",
                            First_name = "Sara",
                            Last_name = "Harris",
                            Tel = "07395556"
                        },
                        new
                        {
                            Id = 9,
                            City = "Dippach",
                            First_name = "Phyllis",
                            Last_name = "Webb",
                            Tel = "073955576"
                        },
                        new
                        {
                            Id = 10,
                            City = "Floresta",
                            First_name = "Roger",
                            Last_name = "Alvarez",
                            Tel = "073955321"
                        },
                        new
                        {
                            Id = 11,
                            City = "Alpine",
                            First_name = "Maria",
                            Last_name = "Carpenter",
                            Tel = "0739551234"
                        },
                        new
                        {
                            Id = 12,
                            City = "Hochborn",
                            First_name = "Lori",
                            Last_name = "Edwards",
                            Tel = "073955353"
                        },
                        new
                        {
                            Id = 13,
                            City = "Dundee",
                            First_name = "Phillip",
                            Last_name = "Mitchell",
                            Tel = "0739553321"
                        },
                        new
                        {
                            Id = 14,
                            City = "Chenove",
                            First_name = "Craig",
                            Last_name = "Lopez",
                            Tel = "0739551249"
                        },
                        new
                        {
                            Id = 15,
                            City = "Mauritius",
                            First_name = "Marie",
                            Last_name = "George",
                            Tel = "073955234"
                        },
                        new
                        {
                            Id = 16,
                            City = "Amapa",
                            First_name = "Jean",
                            Last_name = "Duncan",
                            Tel = "07395541"
                        },
                        new
                        {
                            Id = 17,
                            City = "Arauca",
                            First_name = "Kimberly",
                            Last_name = "Butler",
                            Tel = "073955412"
                        },
                        new
                        {
                            Id = 18,
                            City = "Argolis",
                            First_name = "Heather",
                            Last_name = "Ramirez",
                            Tel = "073951234"
                        },
                        new
                        {
                            Id = 19,
                            City = "Fejer",
                            First_name = "Jason",
                            Last_name = "Sanders",
                            Tel = "073955214"
                        },
                        new
                        {
                            Id = 20,
                            City = "Eastern",
                            First_name = "Juan",
                            Last_name = "Evans",
                            Tel = "073955214"
                        });
                });

            modelBuilder.Entity("LanguagePerson", b =>
                {
                    b.HasOne("MVC1.Models.Language", null)
                        .WithMany()
                        .HasForeignKey("LanguagesIdLanguage")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVC1.Models.Person", null)
                        .WithMany()
                        .HasForeignKey("peopleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
